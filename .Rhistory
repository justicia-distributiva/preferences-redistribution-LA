GINI_Diff=gini_dif,
GDP_Mean=gdp_mean,
GDP_Diff=gdp_dif,
Welfare = welfare,
Country = countryname,
CountryWave = country_wave,
Year = year,
Decile_d10 = decile_d10,
Decile_d1 = decile_d1,
Income2 = Income*Income)
#Null model: Country Year (with Venezuela)
model_0_ven = lmer(Redistribution ~ 1 + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
#Null model: Country Year (with Venezuela)
model_0_ven = lmer(Redistribution ~ 1 + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
screenreg(model_0_ven, stars = c(0.01,0.05,0.1))
#Influence tests
inf.m0 = influence(model_0_ven, "Country")
#Influence tests
inf.m0 = influence(model_0_ven, "Country")
#Cook D
cooks.distance(inf.m0, parameter=1, sort=TRUE)
jpeg("Output/Graphs/CookD.jpg", width=600, height=400)
plot(inf.m0, which="cook",
cutoff=.17, sort=TRUE,
xlab="CookÂ´s Distance",
ylab="Country", width=60, height=40)
while (!is.null(dev.list()))  dev.off()
#Exclude Venezuela
lapop = lapop %>%
filter(country!="VEN")
country_vars_waves = country_vars_waves %>%
filter(country!="VEN")
#Null model: Country Year
model_0 = lmer(Redistribution ~ 1 + (1 | CountryWave) + (1 |Country), data=lapop, weights=wt)
#Null model: Country Year
model_0 = lmer(Redistribution ~ 1 + (1 | CountryWave) + (1 |Country), data=lapop, weights=wt)
screenreg(model_0, stars = c(0.01,0.05,0.1))
#Intraclass correlation estimation (ICC)
icc(model_0, by_group = TRUE)
# Model 1. Only income
model_1 = lmer(Redistribution ~ 1 + Income
+ Year + (1 | CountryWave)
+ (1 | Country), data=lapop, weights=wt)
# Model 1. Only income
model_1 = lmer(Redistribution ~ 1 + Income
+ Year + (1 | CountryWave)
+ (1 | Country), data=lapop, weights=wt)
# Model 2. Individual predictors
model_2 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
# Model 3. Individual predictors + GINI  + GDP
model_3 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff + Year
+ (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
# Model 4. Individual predictors + GINI + GDP (Income)
model_4 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff + Year
+ (1 + Income| CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
#Table
screenreg(list(model_1, model_2, model_3, model_4),  stars = c(0.01,0.05,0.1))
# Model 5: Individual predictors + GINI + GDP (Random Income) + Income*GINI
model_5 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff
+ Income*GINI_Mean + Income*GINI_Diff + Year
+ (1 + Income | CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
# Model 6: Individual predictors + GINI + GDP (Random Income) + Income*GDP
model_6 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff
+ Income*GDP_Mean + Income*GDP_Diff + Year
+ (1 + Income | CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
#Table
screenreg(list(model_5, model_6),  stars = c(0.01,0.05,0.1))
#Figure 6: Income random effect on preference for redistribution by country: intercept and slope
figure_6 = plot_model(model_4, type = "re",
show.legend = FALSE,
show.values = TRUE,
facet.grid = FALSE,
y.offset = .4,
value.offset = .4,
value.size = 3.5,
sort.est= "Income",
title = " ")
figure_6a = figure_6[[2]] +
#scale_y_continuous(limits = c(-0.4, 0.4)) +
scale_color_grey(start=0.6, end=0.2) +
theme(panel.grid = element_line(colour = "grey"),
panel.grid.major.y = element_line(colour = "grey"),panel.background = element_rect(fill = "white")) +
geom_hline(yintercept = 0, linetype = "dashed")
figure_6a
ggsave("Output/Graphs/Figure6.png", plot=figure_6a, height = 5, units="in")
ranef(model_6)
#Alternative figure
me = ggpredict(model_4, terms = c("Income", "Country"), type = "re")
#Alternative figure
me = ggpredict(model_4, terms = c("Income", "Country"), type = "re")
figure_6b = plot(me,
show.title = FALSE) +
labs(
x = "Income (deciles)",
y = "Preference for redistribution",
title = " "
)  +
scale_x_continuous("Income (deciles)", limits = c(1,10), breaks = c(1,2,3,4,5,6,7,8,9,10)) +
theme(panel.grid.minor.x = element_blank()) +
scale_fill_manual(values=as.vector(polychrome(17)))
figure_6b
#GINI [WE]
int_inc_ine = ggpredict(model_5, terms = c("Income", "GINI_Diff [-3.97, 4.93]"))
figure_7a = plot(int_inc_ine,
show.title = FALSE, ci.style = "errorbar", dot.size = 2.5) +
labs(
x = "Income (deciles)",
y = "Preference for redistribution",
title = " ",
colour ="GINI [WE]"
)  +
scale_x_continuous("Income (deciles)", limits = c(0.9,10.1), breaks = c(1,2,3,4,5,6,7,8,9,10)) +
theme(panel.grid.minor.x = element_blank()) +
scale_y_continuous("Preference for redistribution", limits = c(5, 6.5), breaks = c(5, 5.5, 6, 6.5)) +
scale_colour_grey(start=0.6, end=0.1, name="GINI [WE]", labels = c("Max decrease", "Max increase"))
figure_7a
ggsave("Output/Graphs/Figure7a.png", plot=figure_7a, height = 5, units="in")
figure_7a
#GDP [BE]
int_inc_dev = ggpredict(model_6, terms = c("Income", "GDP_Mean [1.65, 13.98]"))
#GDP [BE]
int_inc_dev = ggpredict(model_6, terms = c("Income", "GDP_Mean [1.65, 13.98]"))
figure_7b = plot(int_inc_dev,
show.title = FALSE, ci.style = "errorbar", dot.size = 1.5) +
labs(
x = "Income (deciles)",
y = "Preference for redistribution",
title = " ",
colour ="GDP [BE]"
)  +
scale_x_continuous("Income (deciles)", limits = c(0.9,10.1), breaks = c(1,2,3,4,5,6,7,8,9,10)) +
theme(panel.grid.minor.x = element_blank())  +
scale_y_continuous("Preference for redistribution", limits = c(5, 6.5), breaks = c(5, 5.5, 6, 6.5)) +
scale_colour_grey(start=0.6, end=0.1, name="GDP [BE]", labels = c("Low", "High"))
figure_7b
ggsave("Output/Graphs/Figure7b.png", plot=figure_7b, height = 5, units="in")
#Table_ Sample: Observations by country and Year
lapop$cases=1
sample = with(lapop, tapply(cases, list(Country, Year), sum))
sample = as.data.frame(sample)
sample$Total = rowSums(sample[c("2008","2010","2012", "2014", "2016", "2018")])
sample_country = as.data.frame(with(lapop, tapply(cases, list(Year), sum)))
colnames(sample_country) = "Total"
sample_country$Total = as.numeric(sample_country$Total)
setDT(sample_country, keep.rownames = TRUE)[]
sample_country2 = data.frame(t(sample_country)) %>%
row_to_names(row_number = 1)
sample_country2[] = lapply(sample_country2, function(x) as.numeric(as.character(x)))
sample_country2$Total = rowSums(sample_country2)
sample1 = rbind(sample, sample_country2)
xtable(sample1, digits = 0)
#Country names
lapop$countryname1 = as.factor(lapop$countryname)
table(lapop$countryname1)
#Mean by country
redis_country_mean = with(lapop, tapply(redistribution, list(countryname1), mean))
redis_country_mean = as.data.frame(redis_country_mean)
redis_country_mean0 = as.data.frame(redis_country_mean[ order(row.names(redis_country_mean)), ])
#Sd by country
redis_country_sd = with(lapop, tapply(redistribution, list(countryname1), sd))
redis_country_sd = as.data.frame(redis_country_sd)
#Sd by country-year
redis_country_year = with(lapop, tapply(redistribution, list(countryname1, year), mean))
redis_country_year = as.data.frame(redis_country_year)
redis_country_year$total = rowMeans(redis_country_year[c("2008", "2010", "2012", "2014", "2016", "2018")], na.rm=TRUE)
redis_country_year1 = redis_country_year
setDT(redis_country_year1, keep.rownames = TRUE)[]
redis_country_year1 = redis_country_year1 %>%
arrange(rn)
redis_country_sdyear = as.matrix(redis_country_year)
redis_country_sdyear = rowSds(redis_country_sdyear, na.rm=TRUE)
lapop_names = lapop %>%
distinct(country, countryname1)
country_vars_waves = country_vars_waves %>%
mutate(year = as.factor(year))
country_vars_waves_name = left_join(lapop_names, country_vars_waves)
#Mean by country
gini_country_mean = with(country_vars_waves_name, tapply(gini, list(countryname1), mean))
gini_country_mean = as.data.frame(gini_country_mean)
#Sd by country-year
gini_country_year = with(country_vars_waves_name, tapply(gini, list(countryname1, year), mean))
gini_country_year = as.data.frame(gini_country_year)
gini_country_year$total = rowMeans(gini_country_year[c("2008", "2010", "2012", "2014", "2016", "2018")], na.rm=TRUE)
gini_country_sdyear = as.matrix(gini_country_year)
gini_country_sdyear= rowSds(gini_country_sdyear, na.rm=TRUE)
#Mean by country
gdp_country_mean = with(country_vars_waves_name, tapply(gdp, list(countryname1), mean))
gdp_country_mean = as.data.frame(gdp_country_mean)
#Sd by country-year
gdp_country_year = with(country_vars_waves_name, tapply(gdp, list(countryname1, year), mean))
gdp_country_year = as.data.frame(gdp_country_year)
gdp_country_year$total = rowMeans(gdp_country_year[c("2008", "2010", "2012", "2014", "2016", "2018")], na.rm=TRUE)
gdp_country_sdyear= as.matrix(gdp_country_year)
gdp_country_sdyear = rowSds(gdp_country_sdyear, na.rm=TRUE)
##Total
redis_mean = round(mean(lapop$redistribution), 3)
redis_sd = round(sd(lapop$redistribution), 3)
gini_mean = round(mean(country_vars_waves$gini), 3)
gini_sd = round(sd(country_vars_waves$gini), 3)
gdp_mean = round(mean(country_vars_waves$gdp), 3)
gdp_sd = round(sd(country_vars_waves$gdp), 3)
annex2_total = c("Total", redis_mean, redis_sd, "", gini_mean, gini_sd, gdp_mean, gdp_sd)
##Table
annex2a = as.data.frame(cbind(redis_country_mean, redis_country_sd, redis_country_sdyear,
gini_country_mean, gini_country_sdyear,
gdp_country_mean, gdp_country_sdyear))
setDT(annex2a, keep.rownames = TRUE)[]
annex2a = annex2a %>%
rename(countryname = rn) %>%
arrange(countryname)
annex2_totals = c("Total", redis_mean, redis_sd, NA, gini_mean, gini_sd, gdp_mean, gdp_sd)
annex2_totals = as.data.frame(t(annex2_totals))
#Add totals
annex2 = rbind(annex2a, annex2_totals, use.names=FALSE)
#Round numbers
indexes = annex2 %>%
dplyr::select(-countryname)
countries = annex2 %>%
dplyr::select(countryname)
indexes[] = lapply(indexes, function(x) as.numeric(as.character(x)))
indexes[] = lapply(indexes, function(x) if(is.numeric(x)) round(x, 3) else x)
annex2c = cbind(countries, indexes)
#Final table
annex2 = xtable(annex2c, digits = 3)
annex2
names(annex2) = c("Country", "Redist Mean", "Redist SD total", "Redist SD years", "Gini Mean", "Gini SD years", "GDP Mean", "GDP SD years")
print(xtable(annex2), include.rownames=FALSE, display = c("s","fg","d","d","d","d","d","d"))
redis_country_year = with(lapop, tapply(redistribution, list(countryname, year), mean))
redis_country_year = as.data.frame(redis_country_year)
redis_country_year = as.data.frame(setDT(redis_country_year, keep.rownames = TRUE)[])
redis_country_year = melt(redis_country_year, id=c("rn"))
appendix3 = ggplot(redis_country_year, aes(variable, value))+
geom_bar(stat = "identity", fill = "#333333") +
labs(x = "Year", y =  "Preference for redistribution") +
facet_wrap(~ rn, ncol = 3)  +
scale_y_continuous(limits=c(1,7), breaks = c(1,2,3,4,5,6,7), oob = rescale_none) +
theme(
axis.text=element_text(size=13),
strip.text=element_text(size=15),
legend.text=element_text(size=15),
legend.title=element_text(size=15),
legend.key.size=unit(0.5,"cm"),
legend.position = "bottom",
panel.background = element_rect(fill = "white")) +
theme_hc()
ggsave("../Output/Graphs/Appendix3.png", plot=appendix3, height = 10, width = 9, units="in")
ggsave("Output/Graphs/Appendix3.png", plot=appendix3, height = 10, width = 9, units="in")
#Lineal
model_2 = lme4::lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
#Lineal
model_2 = lme4::lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
#Factor
model_2_f = lme4::lmer(Redistribution ~ 1 + Income_Decile + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
#Quadratic
model_2_q = lme4::lmer(Redistribution ~ 1 + Income + I(Income^2) + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
#Table
screenreg(list(model_2, model_2_f, model_2_q),  stars = c(0.01,0.05,0.1))
#Model 7: Individual predictors + GINI  + GDP + Welfare State
model_7 = lmer(Redistribution ~ 1 + Income + Man + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff
+ Welfare + Year
+ (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
screenreg(list(model_3, model_7),  stars = c(0.01,0.05,0.1))
between = lapop %>%
mutate(wave = as.numeric(paste0(wave))) %>%
group_by(country) %>%
summarise_all(mean, na.rm=TRUE)
within = lapop %>%
mutate(wave = as.numeric(paste0(wave))) %>%
group_by(countryname1, Year) %>%
summarise_all(mean, na.rm=TRUE)
extra1= ggplot(between,
aes(x= GINI_Mean, y= Redistribution, label=country)) +
geom_point() +
geom_smooth(method = "lm", colour="black") +
geom_text(aes(label=country),hjust=-0.1, vjust=-0.5, size=3.5) +
labs(x = "Inequality", y = "Redistributive Preference", fill="") +
scale_y_continuous("Redistributive Preference", limits = c(4.8,6.2),
breaks = c(4.8,5.2,5.6,6)) +
scale_x_continuous("Inequality", limits = c(40,60),
breaks = c(40,50,60)) +
theme(panel.grid.major = element_line(colour = "grey"),
legend.position="none",
axis.text=element_text(size=10),
strip.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12),
legend.key.size=unit(1,"cm"),
panel.background = element_rect(fill = "white"))
extra1
ggsave("Output/Graphs/Extra1.png", plot=extra1)
#Inequality: Relation "within" countries
extra2= ggplot(within,
aes(x= GINI, y= Redistribution, colour=as.factor(wave))) +
geom_point(size = 2, alpha = .8) +
stat_smooth(size = 1, method = "lm", se = FALSE, colour="black") +
facet_wrap(~countryname1, ncol=3) +
labs(x = "Inequality", y =  "Redistributive Preference") +
scale_color_grey(start=0.8, end=0.2, name="Wave") +
scale_y_continuous( "Redistributive Preference", limits = c(4.2,6.7),
breaks = c(4.5,5,5.5,6,6.5)) +
scale_x_continuous("Inequality",
breaks = c(35,40,45,50,55,60)) +
theme(panel.grid.major = element_line(colour = "grey"),
legend.position="bottom",
axis.text=element_text(size=10),
strip.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12),
legend.key.size=unit(1,"cm"),
panel.background = element_rect(fill = "white"))
extra2
ggsave("Output/Graphs/Extra2.png", plot=extra2, height = 10, width = 10, units="in")
ggsave("Output/Graphs/Extra2.png", plot=extra2, height = 10, width = 10, units="in")
#Economic Development: Relation "between" countries
extra3 = ggplot(between,
aes(x= GDP_Mean, y= Redistribution, label=country)) +
geom_point() +
geom_smooth(method = "lm", colour="black") +
geom_text(aes(label=country),hjust=-0.1, vjust=-0.5, size=3.5) +
labs(x = "Economic Development", y = "Redistributive Preference", fill="") +
scale_y_continuous("Redistributive Preference", limits = c(4.8,6.2),
breaks = c(4.8,5.2,5.6,6)) +
scale_x_continuous("Economic Development", limits = c(1,14),
breaks = c(5,10,15)) +
theme(panel.grid.major = element_line(colour = "grey"),
legend.position="none",
axis.text=element_text(size=10),
strip.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12),
legend.key.size=unit(1,"cm"),
panel.background = element_rect(fill = "white"))
#Economic Development: Relation "between" countries
extra3 = ggplot(between,
aes(x= GDP_Mean, y= Redistribution, label=country)) +
geom_point() +
geom_smooth(method = "lm", colour="black") +
geom_text(aes(label=country),hjust=-0.1, vjust=-0.5, size=3.5) +
labs(x = "Economic Development", y = "Redistributive Preference", fill="") +
scale_y_continuous("Redistributive Preference", limits = c(4.8,6.2),
breaks = c(4.8,5.2,5.6,6)) +
scale_x_continuous("Economic Development", limits = c(1,14),
breaks = c(5,10,15)) +
theme(panel.grid.major = element_line(colour = "grey"),
legend.position="none",
axis.text=element_text(size=10),
strip.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12),
legend.key.size=unit(1,"cm"),
panel.background = element_rect(fill = "white"))
extra3
ggsave("Output/Graphs/Extra3.png", plot=extra3)
#Economic Development: Relation "within" countries
extra4= ggplot(within,
aes(x= GDP, y= Redistribution, colour=as.factor(wave))) +
geom_point(size = 2, alpha = .8) +
stat_smooth(size = 1, method = "lm", se = FALSE, colour="black") +
facet_wrap(~countryname1, ncol=3) +
labs(x = "Economic Development", y =  "Redistributive Preference") +
scale_color_grey(start=0.8, end=0.2, name="Wave") +
scale_y_continuous( "Redistributive Preference", limits = c(4.2,6.7),
breaks = c(4.5,5,5.5,6,6.5)) +
scale_x_continuous("Economic Development",
breaks = c(0,5,10,15,20)) +
theme(panel.grid.major = element_line(colour = "grey"),
legend.position="bottom",
axis.text=element_text(size=10),
strip.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12),
legend.key.size=unit(1,"cm"),
panel.background = element_rect(fill = "white"))
extra4
ggsave("Output/Graphs/Extra4.png", plot=extra4, height = 10, width = 10, units="in")
#Install and load packages
pacman::p_load(tidyverse, countrycode, car, zoo, wbstats, Hmisc, stargazer, stats,
ggthemes, data.table, reshape2, scales, xtable, ggrepel)
#Load database
rm(list = ls())
load("Input/proc/LAPOP_Final.RData")
getwd()
load("Input/proc/LAPOP_Final.RData")
#Load database
rm(list = ls())
load("Input/proc/LAPOP_Final.RData")
#Load database
rm(list = ls())
load("./Input/proc/LAPOP_Final.RData")
#Load database
rm(list = ls())
getwd()
load("Input/proc/LAPOP_Final.RData")
#Load database
rm(list = ls())
getwd()
load("../Input/proc/LAPOP_Final.RData")
#Exclude Venezuela
lapop_ven = lapop
country_vars_waves_ven = country_vars_waves
lapop = lapop %>%
filter(country!="VEN")
country_vars_waves = country_vars_waves %>%
filter(country!="VEN")
getwd()
#Install and load packages
pacman::p_load(tidyverse, countrycode, car, zoo, wbstats, Hmisc, stargazer, stats,
ggthemes, data.table, reshape2, scales, xtable, ggrepel)
#Load database
rm(list = ls())
load("Input/proc/LAPOP_Final.RData")
#install.packages("pacman")
pacman::p_load(tidyverse, countrycode, car, zoo, wbstats, Hmisc)
#Load database
rm(list = ls())
load("Input/original/2008-2018_LAPOP_AL.RData")
getwd()
getwd()
#Install and load packages
pacman::p_load(tidyverse, countrycode, car, zoo, wbstats, Hmisc, stargazer, stats,
ggthemes, data.table, reshape2, scales, xtable, ggrepel)
#Load database
rm(list = ls())
load("../Input/proc/LAPOP_Final.RData")
#Exclude Venezuela
lapop_ven = lapop
country_vars_waves_ven = country_vars_waves
lapop = lapop %>%
filter(country!="VEN")
country_vars_waves = country_vars_waves %>%
filter(country!="VEN")
#New
lapop = lapop %>%
select(country, countryname, country_wave, country_wave_rec,
year, wave, weight1500, wt, redistribution,
man_f, age, married_f, ideology_f, employment_r, education_r,
decile, decile_d10, decile_f, zone, sysconf,
gdp, gdp_mean, gdp_dif, gini, gini_mean, gini_dif, welfare)
#Level 1
lapop_a = lapop %>%
select(redistribution, decile, man_f, age,
married_f, ideology_f, sysconf, employment_r,
education_r, zone, decile_d10, decile_f)
lapop_a = lapop_a %>%
rename(income = decile) %>%
mutate(man = as.numeric(man_f) - 1,
married = as.numeric(married_f) - 1,
ideology = as.numeric(ideology_f) - 1,
urban = as.numeric(zone) - 1,
employment = as.numeric(employment_r) - 1,
education = as.numeric(education_r) - 1)
stargazer(lapop_a,title="Descriptive Statistics", omit.summary.stat = c("p25", "p75"))
prop.table(table(lapop_a$man_f))
prop.table(table(lapop_a$married_f))
prop.table(table(lapop_a$employment_r))
prop.table(table(lapop_a$ideology_f))
prop.table(table(lapop_a$education_r))
prop.table(table(lapop_a$zone))
#Level 2
country_vars_waves_a= country_vars_waves %>%
select(-c(year, welfare))
stargazer(country_vars_waves_a, title="Descriptive Statistics", omit.summary.stat = c("p25", "p75"))
#Level 3
country_vars = country_vars_waves %>%
distinct(country, .keep_all=TRUE) %>%
select(country, welfare)
prop.table(table(country_vars$welfare))
View(country_vars)
View(country_vars_waves)
View(lapop)
lapop %>%
select(country, redistribution) %>%
prop.table()
sapply(lapop, class)
lapop %>%
select(country, redistribution) %>%
flat_table(margin = "row", digits = 1)
??flat_table
library(sjmisc)
t
lapop %>%
select(country, redistribution) %>%
flat_table(margin = "row", digits = 1)
lapop %>%
ungroup() %>%
select(country, redistribution) %>%
flat_table(margin = "row", digits = 1)
