conflict_prefer("filter", "dplyr")
conflict_prefer("recode", "car")
conflict_prefer("melt", "data.table")
#Load database
rm(list = ls())
load(here("Input", "Proc", "LAPOP_Final.RData"))
#Rename variables
lapop = lapop %>%
mutate(Redistribution = redistribution,
Income = decile,
Male = male_f,
Age = age,
Political = ideology_f,
Left = left,
Married = married_f,
SystemConfidence=sysconf,
Employment=employment_r,
Education=education_r,
Urban=zone,
Income_Decile=decile_f,
GINI=gini,
GDP=gdp,
GINI_Mean=gini_mean,
GINI_Diff=gini_dif,
GDP_Mean=gdp_mean,
GDP_Diff=gdp_dif,
Welfare = welfare,
Country = countryname,
CountryWave = country_wave,
Year = year,
Decile_d10 = decile_d10,
Decile_d1 = decile_d1,
Income2 = Income*Income)
#Null model: Country Year (with Venezuela)
model_0_ven = lmer(redistribution ~ 1 + (1 | country_wave) + (1 | countryname), data=lapop_all, weights=wt)
screenreg(model_0_ven, stars = c(0.01,0.05,0.1))
#Influence tests
inf.m0 = influence(model_0_ven, "countryname")
#Cook D
cooks.distance(inf.m0, parameter=1, sort=TRUE)
jpeg(here("Output", "Graphs", "CookD.jpg"), width=600, height=400)
plot(inf.m0, which="cook",
cutoff=.17, sort=TRUE,
xlab="CookÂ´s Distance",
ylab="Country", width=60, height=40)
while (!is.null(dev.list()))  dev.off()
#Null model: Country Year
model_0 = lmer(Redistribution ~ 1 + (1 | CountryWave) + (1 |Country), data=lapop, weights=wt)
screenreg(model_0, stars = c(0.01,0.05,0.1))
#Intraclass correlation estimation (ICC)
icc(model_0, by_group = TRUE)
# ICC (Country): 0.015
# ICC (CountryWave): 0.042
# ICC (individual): 0.943
# Model 1. Only income
model_1 = lmer(Redistribution ~ 1 + Income
+ Year + (1 | CountryWave)
+ (1 | Country), data=lapop, weights=wt)
# Model 2. Individual predictors
model_2 = lmer(Redistribution ~ 1 + Income + Male + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + Year + (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
# Model 3. Individual predictors + GINI  + GDP
model_3 = lmer(Redistribution ~ 1 + Income + Male + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff + Year
+ (1 | CountryWave) + (1 | Country), data=lapop, weights=wt)
# Model 4. Individual predictors + GINI + GDP (Income)
model_4 = lmer(Redistribution ~ 1 + Income + Male + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff + Year
+ (1 + Income| CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
#Table
screenreg(list(model_1, model_2, model_3, model_4),  stars = c(0.01,0.05,0.1))
# Model 5: Individual predictors + GINI + GDP (Random Income) + Income*GINI
model_5 = lmer(Redistribution ~ 1 + Income + Male + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff
+ Income*GINI_Mean + Income*GINI_Diff + Year
+ (1 + Income | CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
# Model 6: Individual predictors + GINI + GDP (Random Income) + Income*GDP
model_6 = lmer(Redistribution ~ 1 + Income + Male + Age + Married
+ Political + SystemConfidence + Employment + Education
+ Urban + GINI_Mean + GINI_Diff
+ GDP_Mean + GDP_Diff
+ Income*GDP_Mean + Income*GDP_Diff + Year
+ (1 + Income | CountryWave) + (1 + Income | Country), data=lapop, weights=wt)
#Table
screenreg(list(model_5, model_6),  stars = c(0.01,0.05,0.1))
#Table
screenreg(list(model_1, model_2, model_3, model_4),  stars = c(0.01,0.05,0.1), digits = 3)
#Table
screenreg(list(model_5, model_6),  stars = c(0.01,0.05,0.1), digits = 3)
#Install and load packages
pacman::p_load(tidyverse, countrycode, car, zoo, wbstats, Hmisc, stargazer, stats,
ggthemes, data.table, reshape2, scales, xtable, ggrepel, here, conflicted)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
#Load database
rm(list = ls())
load(here("Input", "Proc", "LAPOP_Final.RData"))
#New
lapop = lapop %>%
select(country, countryname, country_wave, country_wave_rec,
year, wave, weight1500, wt, redistribution,
male_f, age, married_f, ideology_f, employment_r, education_r,
decile, decile_d10, decile_f, zone, sysconf,
gdp, gdp_mean, gdp_dif, gini, gini_mean, gini_dif, welfare)
#Level 1
lapop_a = lapop %>%
select(redistribution, decile, male_f, age,
married_f, ideology_f, sysconf, employment_r,
education_r, zone, decile_d10, decile_f)
lapop_a = lapop_a %>%
rename(income = decile) %>%
mutate(male = as.numeric(male_f) - 1,
married = as.numeric(married_f) - 1,
ideology = as.numeric(ideology_f) - 1,
urban = as.numeric(zone) - 1,
employment = as.numeric(employment_r) - 1,
education = as.numeric(education_r) - 1)
stargazer(as.data.frame(lapop_a), title="Descriptive Statistics", omit.summary.stat = c("p25", "p75"))
prop.table(table(lapop_a$male_f))
prop.table(table(lapop_a$married_f))
prop.table(table(lapop_a$employment_r))
prop.table(table(lapop_a$ideology_f))
prop.table(table(lapop_a$education_r))
prop.table(table(lapop_a$zone))
#Level 2
country_vars_waves_a= country_vars_waves %>%
select(-c(year, welfare))
stargazer(as.data.frame(country_vars_waves_a), title="Descriptive Statistics", omit.summary.stat = c("p25", "p75"))
#Level 3
country_vars = country_vars_waves %>%
distinct(country, .keep_all=TRUE) %>%
select(country, welfare)
prop.table(table(country_vars$welfare))
#Figure 2: Preference for redistribution by countries. Percentage by category.
redist = xtabs(~countryname+redistribution, data = lapop)
redist = prop.table(redist, 1)*100
redist = as.data.frame(redist) %>%
arrange(desc(redistribution, Freq)) %>%
mutate(countryname1 = case_when(countryname=="Bolivia" ~ 1,
countryname=="Peru" ~ 2,
countryname=="Guatemala" ~ 3,
countryname=="Ecuador" ~ 4,
countryname=="Honduras" ~ 5,
countryname=="El Salvador" ~ 6,
countryname=="Mexico" ~ 7,
countryname=="Colombia" ~ 8,
countryname=="Panama" ~  9,
countryname=="Brazil" ~ 10,
countryname=="Paraguay" ~ 11,
countryname=="Uruguay" ~ 12,
countryname=="Chile" ~ 13,
countryname=="Argentina" ~ 14,
countryname=="Costa Rica" ~ 15,
countryname=="Nicaragua" ~ 16,
countryname=="Dominican Republic" ~ 17)) %>%
mutate(countryname1 = factor(countryname1,
levels = c(1:17),
labels = c("Bolivia", "Peru", "Guatemala", "Ecuador", "Honduras", "El Salvador", "Mexico",
"Colombia", "Panama", "Brazil", "Paraguay", "Uruguay", "Chile", "Argentina",
"Costa Rica", "Nicaragua", "Dominican Republic")),
order = factor(countryname,
levels = c(1:17),
labels = c("Bolivia", "Peru", "Guatemala", "Ecuador", "Honduras", "El Salvador", "Mexico",
"Colombia", "Panama", "Brazil", "Paraguay", "Uruguay", "Chile", "Argentina",
"Costa Rica", "Nicaragua", "Dominican Republic")))
figure2 = ggplot(data = redist,
aes(x=reorder(countryname1, order), y = Freq,
fill = factor(redistribution))) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) + coord_flip() + labs(x = "", y = "", fill="") +
guides(fill = guide_legend(reverse = TRUE)) +
scale_y_continuous(labels = function(Freq){paste0(Freq, "%")}) +
theme(panel.background = element_rect(fill = "white"),
axis.text=element_text(size=10),
strip.text=element_text(size=12))  +
scale_fill_grey(start=0.8, end=0.2, name = "",
labels = c("1 (Disagree)", "2", "3", "4", "5", "6", "7 (Agree)"))
figure2
ggsave(here("Output", "Graphs", "Figure2.jpg"), plot=figure2, height = 4, units="in")
#Figure 3: Preference for redistribution by country and year
figure3 = ggplot(lapop, aes(x= redistribution,  colour= year)) +
geom_line(aes(y = ..prop.., fill = factor(..x..)), stat="count", binwidth = 1, size = 1) +
xlim(1, 7) +
facet_wrap(~countryname, ncol=3) +
labs(x = "Preference for redistribution", y = "", fill="") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("1 (Disagree)", "2", "3", "4", "5", "6", "7 (Agree)")) +
theme(
axis.text=element_text(size=15),
strip.text=element_text(size=15),
legend.text=element_text(size=15),
legend.title=element_text(size=15),
legend.key.size=unit(0.5,"cm"),
legend.position = "bottom",
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 90, hjust = 1, size = 10)) +
theme_hc() +
scale_color_grey(start=0.9, end=0.1, name="Wave")
figure3
ggsave(here("Output", "Graphs", "Figure3.jpg"), plot=figure3, height = 10, width = 9, units="in")
#Table 2: Average redistribution preference of income deciles, by country
redis_decile = with(lapop, tapply(redistribution, list(countryname, decile_f), mean))
redis_decile = as.data.frame(redis_decile)
redis_decile = as.data.frame(setDT(redis_decile, keep.rownames = TRUE)[])
redis_decile_country = with(lapop, tapply(redistribution, list(countryname), mean))
redis_decile_country = as.data.frame(redis_decile_country)
redis_decile_country = as.data.frame(setDT(redis_decile_country, keep.rownames = TRUE)[])
colnames(redis_decile_country) = c("rn", "Total")
redis_decile = left_join(redis_decile, redis_decile_country) %>%
rename(country = rn)
redis_decile
print(xtable(redis_decile), include.rownames=FALSE)
View(country_vars)
View(country_vars_waves)
View(country_vars_waves_a)
View(figure2)
View(lapop)
names(lapop)
head(lapop)
head(lapop)
names(lapop)
#Statistical differences
countries = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM",
"HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY",
"VEN")
for (i in 1:length(countries)) {
lapop_i = lapop %>%
filter(country == countries[i])
countries[i]
name=paste0("m_income_", countries[i])
pais= paste0(countries[i])
assign(name, lme4::lmer(redistribution ~ 1 + decile_f + (1 | country_wave), data=lapop_i, weights=wt))
}
#Statistical differences
countries = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM",
"HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY")
for (i in 1:length(countries)) {
lapop_i = lapop %>%
filter(country == countries[i])
countries[i]
name=paste0("m_income_", countries[i])
pais= paste0(countries[i])
assign(name, lme4::lmer(redistribution ~ 1 + decile_f + (1 | country_wave), data=lapop_i, weights=wt))
}
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM,
m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.01,0.05,0.1),
digits = 1)
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.01,0.05,0.1),
digits = 1)
screenreg(list(m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.01,0.05,0.1),
digits = 1)
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM")))
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM"))
screenreg(list(m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY"))
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM"))
screenreg(list(m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY"))
m_income_ALL = lme4::lmer(redistribution ~ 1 + decile_f + (1 | country_wave), data=lapop, weights=wt)
screenreg(m_income_ALL,
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ALL"))
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM"))
screenreg(list(m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY"))
m_income_ALL = lme4::lmer(redistribution ~ 1 + decile_f + (1 | country_wave), data=lapop, weights=wt)
screenreg(m_income_ALL,
stars = c(0.01,0.05,0.1),
digits = 1,
custom.model.name = c("ALL"))
screenreg(m_income_ALL,
stars = c(0.05),
digits = 1,
custom.model.name = c("ALL"))
screenreg(list(m_income_ARG,
m_income_BOL,
m_income_BRA,
m_income_CHL,
m_income_COL,
m_income_CRI,
m_income_DOM,
m_income_ECU,
m_income_GTM),
stars = c(0.05),
digits = 1,
custom.model.name = c("ARG",
"BOL",
"BRA",
"CHL",
"COL",
"CRI",
"DOM",
"ECU",
"GTM"))
screenreg(list(m_income_HND,
m_income_MEX,
m_income_NIC,
m_income_PAN,
m_income_PER,
m_income_PRY,
m_income_SLV,
m_income_URY),
stars = c(0.05),
digits = 1,
custom.model.name = c("HND",
"MEX",
"NIC",
"PAN",
"PER",
"PRY",
"SLV",
"URY"))
m_income_ALL = lme4::lmer(redistribution ~ 1 + decile_f + (1 | country_wave), data=lapop, weights=wt)
screenreg(m_income_ALL,
stars = c(0.05),
digits = 1,
custom.model.name = c("ALL"))
